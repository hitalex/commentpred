<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0073)http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/ -->
<html xmlns="http://www.w3.org/1999/xhtml" lang="en"><head profile="http://gmpg.org/xfn/11"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">

<title>Generating Graph Visualizations with pydot and Graphviz «  The Python Haven</title>
<link rel="stylesheet" href="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/style.css" type="text/css" media="screen" title="Freshy">
<!--[if IE 7]>
	<link rel="stylesheet" href="http://s0.wp.com/wp-content/themes/pub/freshy/ie7.css?m=1285366787g" type="text/css" media="screen" />
<![endif]-->
<!--[if lt IE 7]>
	<link rel="stylesheet" href="http://s0.wp.com/wp-content/themes/pub/freshy/ie6.css?m=1323834012g" type="text/css" media="screen" />
<![endif]-->
<link rel="pingback" href="http://pythonhaven.wordpress.com/xmlrpc.php">
<link rel="alternate" type="application/rss+xml" title="The Python Haven » Feed" href="http://pythonhaven.wordpress.com/feed/">
<link rel="alternate" type="application/rss+xml" title="The Python Haven » Comments Feed" href="http://pythonhaven.wordpress.com/comments/feed/">
<link rel="alternate" type="application/rss+xml" title="The Python Haven » Generating Graph Visualizations with pydot and Graphviz Comments Feed" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/feed/">
<script type="text/javascript" async="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/application-2f2778024ea8b68b9d7f2f0aa3c80652.js"></script><script type="text/javascript" async="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/vglnk.js"></script><script src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/quant.js" async="" type="text/javascript"></script><script type="text/javascript" async="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/tags.js"></script><script type="text/javascript">
/* <![CDATA[ */
function addLoadEvent(func){var oldonload=window.onload;if(typeof window.onload!='function'){window.onload=func;}else{window.onload=function(){oldonload();func();}}}
/* ]]> */
</script>
<link rel="stylesheet" id="all-css-0" href="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/saved_resource" type="text/css" media="all">
<link rel="stylesheet" id="print-css-0" href="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/global-print.css" type="text/css" media="print">
<script type="text/javascript">
/* <![CDATA[ */
var LoggedOutFollow = {"invalid_email":"Your subscription did not succeed, please try again with a valid email address."};
/* ]]> */
</script>
<script type="text/javascript" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/saved_resource(1)"></script>
<link rel="stylesheet" id="all-css-0" href="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/style(1).css" type="text/css" media="all">
<!--[if lt IE 8]>
<link rel='stylesheet' id='highlander-comments-ie7-css'  href='http://s2.wp.com/wp-content/mu-plugins/highlander-comments/style-ie7.css?m=1351637563g&#038;ver=20110606' type='text/css' media='all' />
<![endif]-->
<link rel="EditURI" type="application/rsd+xml" title="RSD" href="http://pythonhaven.wordpress.com/xmlrpc.php?rsd">
<link rel="wlwmanifest" type="application/wlwmanifest+xml" href="http://pythonhaven.wordpress.com/wp-includes/wlwmanifest.xml"> 
<link rel="prev" title="wxGrid does not update after a change on PyGridTableBase" href="http://pythonhaven.wordpress.com/2009/12/01/wxgrid-does-not-update-after-a-change-on-pygridtablebase/">
<link rel="next" title="Fix “import mercurial” problem in windows" href="http://pythonhaven.wordpress.com/2010/10/15/fix-import-mercurial-problem-in-windows/">
<meta name="generator" content="WordPress.com">
<link rel="canonical" href="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/Generating Graph Visualizations with pydot and Graphviz « The Python Haven.htm">
<link rel="shortlink" href="http://wp.me/psTlR-1w">
<link rel="alternate" type="application/json+oembed" href="http://public-api.wordpress.com/oembed/1.0/?format=json&url=http%3A%2F%2Fpythonhaven.wordpress.com%2F2009%2F12%2F09%2Fgenerating_graphs_with_pydot%2F&for=wpcom-auto-discovery"><link rel="alternate" type="application/xml+oembed" href="http://public-api.wordpress.com/oembed/1.0/?format=xml&url=http%3A%2F%2Fpythonhaven.wordpress.com%2F2009%2F12%2F09%2Fgenerating_graphs_with_pydot%2F&for=wpcom-auto-discovery">
<!-- Jetpack Open Graph Tags -->
<meta property="og:type" content="article">
<meta property="og:title" content="Generating Graph Visualizations with pydot and Graphviz">
<meta property="og:url" content="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/">
<meta property="og:description" content="Hi, for my latest college assignment I had to find a way to visualize data that is interrelated. For instance, my application generated the following data: A --&gt; B B --&gt; C B --&gt; D And I ne...">
<meta property="og:site_name" content="The Python Haven">
<meta property="og:image" content="http://i2.wp.com/pythonhaven.files.wordpress.com/2009/12/example2_graph.png?fit=400%2C400">
<meta property="og:image" content="http://i0.wp.com/pythonhaven.files.wordpress.com/2009/12/example1_graph.png?fit=400%2C400">
<meta name="twitter:site" content="@wordpressdotcom">
<meta name="twitter:image" content="http://i2.wp.com/pythonhaven.files.wordpress.com/2009/12/example2_graph.png">
<meta name="twitter:card" content="summary">
<meta property="fb:app_id" content="249643311490">
<link rel="shortcut icon" type="image/x-icon" href="http://1.gravatar.com/blavatar/f985f3c7589fc7b52df43a2af7bf5fd3?s=16" sizes="16x16">
<link rel="icon" type="image/x-icon" href="http://1.gravatar.com/blavatar/f985f3c7589fc7b52df43a2af7bf5fd3?s=16" sizes="16x16">
<link rel="apple-touch-icon-precomposed" href="http://0.gravatar.com/blavatar/2310ad5a79e22f67e09a2cb57b876ebd?s=114">
<link rel="openid.server" href="http://pythonhaven.wordpress.com/?openidserver=1">
<link rel="openid.delegate" href="http://pythonhaven.wordpress.com/">
<link rel="search" type="application/opensearchdescription+xml" href="http://pythonhaven.wordpress.com/osd.xml" title="The Python Haven">
<link rel="search" type="application/opensearchdescription+xml" href="http://wordpress.com/opensearch.xml" title="WordPress.com">
		<style>
		/* <![CDATA[ */
		/* Block: reblog */
		
		.reblog-from img                   { margin: 0 10px 0 0; vertical-align: middle; padding: 0; border: 0; }
		.reblogger-note img.avatar         { float: left; padding: 0; border: 0; }
		.reblogger-note-content            { margin: 0 0 20px; }
		.reblog-post .wpcom-enhanced-excerpt-content { border-left: 3px solid #eee; padding-left: 15px; }
		.reblog-post ul.thumb-list         { display: block; list-style: none; margin: 2px 0; padding: 0; clear: both; }
		.reblog-post ul.thumb-list li      { display: inline; margin: 0; padding: 0 1px; border: 0; }
		.reblog-post ul.thumb-list li a    { margin: 0; padding: 0; border: 0; }
		.reblog-post ul.thumb-list li img  { margin: 0; padding: 0; border: 0; }
		
		.reblog-post .wpcom-enhanced-excerpt { clear: both; }
		
		.reblog-post .wpcom-enhanced-excerpt address,
		.reblog-post .wpcom-enhanced-excerpt li,
		.reblog-post .wpcom-enhanced-excerpt h1,
		.reblog-post .wpcom-enhanced-excerpt h2,
		.reblog-post .wpcom-enhanced-excerpt h3,
		.reblog-post .wpcom-enhanced-excerpt h4,
		.reblog-post .wpcom-enhanced-excerpt h5,
		.reblog-post .wpcom-enhanced-excerpt h6,
		.reblog-post .wpcom-enhanced-excerpt p { font-size: 100% !important; }
		
		.reblog-post .wpcom-enhanced-excerpt blockquote,
		.reblog-post .wpcom-enhanced-excerpt pre,
		.reblog-post .wpcom-enhanced-excerpt code,
		.reblog-post .wpcom-enhanced-excerpt q { font-size: 98% !important; }
		

		/* ]]> */		
		</style>
		
	<style type="text/css">
	.menu.primary li a {
		background-image:url("http://s0.wp.com/wp-content/themes/pub/freshy/images/menu/menu_triple.gif?m=1171163464g");
	}
	.menu.primary li a.first_menu {
		background-image:url("http://s0.wp.com/wp-content/themes/pub/freshy/images/menu/menu_start_triple.gif?m=1171163464g");
	}
	.menu.primary li a.last_menu {
		background-image:url("http://s0.wp.com/wp-content/themes/pub/freshy/images/menu/menu_end_triple.gif?m=1171163464g");
	}

	.description {
		color:#ADCF20;
	}
	#content .commentlist dd.author_comment {
		background-color:#a3cb00 !important;
	}
	html > body #content .commentlist dd.author_comment {
		background-color:#a3cb00 !important;
	}
	#content .commentlist dt.author_comment .date {
		color:#a3cb00 !important;
		border-color:#a3cb00 !important;
	}
	#content .commentlist .author_comment .author,
	#content .commentlist .author_comment .author a {
		color:#a3cb00 !important;
		border-color:#a3cb00 !important;
	}
	#sidebar h2 {
		color:#f78b0c;
		background-color:#FFFFFF;
		border-bottom-color:#f78b0c;
	}
	#sidebar {
		background-color:#FFFFFF;
	}
	*::-moz-selection {
		background-color:#FF3C00;
	}

	#content a:hover {
		border-bottom:1px dotted #FF3C00;
	}

	#sidebar a:hover,
	#sidebar .current_page_item li a:hover,
	#sidebar .current-cat li a:hover,
	#sidebar .current_page_item a,
	#sidebar .current-cat a ,
	.readmore,
	#content .postmetadata a
	{
		color : #FF3C00;
	}

	#title_image {
		margin:0;
		text-align:left;
		display:block;
		height:95px;
	}

	</style>

	<meta name="application-name" content="The Python Haven"><meta name="msapplication-window" content="width=device-width;height=device-height"><meta name="msapplication-tooltip" content="A safe place for Python blogging"><meta name="msapplication-task" content="name=Subscribe;action-uri=http://pythonhaven.wordpress.com/feed/;icon-uri=http://1.gravatar.com/blavatar/f985f3c7589fc7b52df43a2af7bf5fd3?s=16"><meta name="msapplication-task" content="name=Sign up for a free blog;action-uri=http://wordpress.com/signup/;icon-uri=http://s2.wp.com/i/favicon.ico"><meta name="msapplication-task" content="name=WordPress.com Support;action-uri=http://support.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico"><meta name="msapplication-task" content="name=WordPress.com Forums;action-uri=http://forums.wordpress.com/;icon-uri=http://s2.wp.com/i/favicon.ico"><meta name="title" content="Generating Graph Visualizations with pydot and Graphviz | The Python Haven on WordPress.com">
<meta name="description" content="Hi, for my latest college assignment I had to find a way to visualize data that is interrelated. For instance, my application generated the following data: A --&gt; B B --&gt; C B --&gt; D And I needed a way to generate pretty graphs without too much headache! I am already using wxPython for the…">
<style type="text/css">
	#title_image {
	background-image:url(http://pythonhaven.files.wordpress.com/2009/03/cropped-2355590274_06444d4509_o.jpg);
	}
</style>

<script type="text/javascript" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/google_service.js">
</script>
<script type="text/javascript">
GS_googleAddAdSenseService("ca-pub-3443918307802676");
GS_googleEnableAllServices();
</script><script src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/google_ads.js"></script>
<script type="text/javascript">
GA_googleAddSlot("ca-pub-3443918307802676", "wpcom_below_post");
</script>
<script type="text/javascript">
GA_googleFetchAds();
</script>
<script type="text/javascript"> 
	window.google_analytics_uacct = "UA-52447-2"; 
</script>

<script type="text/javascript">
	var _gaq = _gaq || [];
	_gaq.push(['_setAccount', 'UA-52447-2']);
	_gaq.push(['_setDomainName', 'wordpress.com']);
	_gaq.push(['_initData']);
	_gaq.push(['_trackPageview']);

	(function() {
		var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
		ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
		(document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(ga);
	})();
</script><script type="text/javascript" async="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/ga.js"></script>
<script charset="utf-8" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/rate.php"></script><link rel="stylesheet" type="text/css" id="gravatar-card-css" href="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/hovercard.css"><link rel="stylesheet" type="text/css" id="gravatar-card-services-css" href="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/services.css"><script type="text/javascript" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/osd.js"></script><style type="text/css" id="pd_popup_holder_style_896293_post_94">#pd_popup_holder_896293_post_94 { position:absolute; display:none; width:350px; height:auto; top:0px; left:0px; z-index:10000; border:solid 1px #CCC; background-color:white; padding:0px 15px;font-family:Arial,Sans;box-shadow: -10px 10px 20px rgba(0, 0, 0, .5);-webkit-box-shadow: 0px 0px 6px rgba(0, 0, 0, .25);-moz-box-shadow: 0px 0px 6px rgba(0, 0, 0, .25); }</style></head>
<body class="single single-post postid-94 single-format-standard highlander-enabled highlander-light">

<div id="page">
		<div id="wrapper">
		<!-- header -->
		<div id="header">
			<div id="title">
				<h1>
					<a href="http://pythonhaven.wordpress.com/">
						<span>The Python Haven</span>
					</a>
				</h1>
				<div class="description">
					<small>A safe place for Python blogging</small>
				</div>
			</div>
			<div id="title_image"></div>
		</div>

		<!-- main div -->
		<div id="frame">

		<!-- main menu -->
		<ul class="menu page-menu primary">
	<li class="page_item">
		<a class="first_menu" href="http://pythonhaven.wordpress.com/">
			Home		</a>
	</li>

	<li class="page_item"><a href="http://pythonhaven.wordpress.com/about/" title="About">About</a></li>

	<li class="last_menu">
		<!-- put an empty link to have the end of the menu anyway -->
		<a class="last_menu_off"></a>
	</li>
</ul>

		<hr style="display:none">

	<div id="content">

	
		
			<div class="post-94 post type-post status-publish format-standard hentry category-uncategorized tag-graphs tag-pydot tag-python tag-visualization" id="post-94">

				<h2>Generating Graph Visualizations with pydot and&nbsp;Graphviz</h2>

				<small class="date">
					<span class="date_day">9</span>
					<span class="date_month">12</span>
					<span class="date_year">2009</span>
				</small>

				<div class="entry">
					<div class="pd-rating" id="pd_rating_holder_896293_post_94" style="display: inline-block;"><div class="rating-icons" id="pd_rate_896293_post_94" style="float:left;"><div class="rating-star-icon" onmouseout="PDRTJS_896293_post_94.rebuild();" onclick="PDRTJS_896293_post_94.rate(1);" onmouseover="PDRTJS_896293_post_94.hover(1);" id="PDRTJS_896293_post_94_stars_1" style="background-size: 32px 48px!important; cursor: pointer; width: 16px; height: 16px; line-height: 16px; background: url(http://i0.poll.fm/ratings/images/star-yellow-sml.png) top left; float: left; padding: 0px; marging: 0px; margin-right: 1px;">&nbsp;</div><div class="rating-star-icon" onmouseout="PDRTJS_896293_post_94.rebuild();" onclick="PDRTJS_896293_post_94.rate(2);" onmouseover="PDRTJS_896293_post_94.hover(2);" id="PDRTJS_896293_post_94_stars_2" style="background-size: 32px 48px!important; cursor: pointer; width: 16px; height: 16px; line-height: 16px; background: url(http://i0.poll.fm/ratings/images/star-yellow-sml.png) top left; float: left; padding: 0px; marging: 0px; margin-right: 1px;">&nbsp;</div><div class="rating-star-icon" onmouseout="PDRTJS_896293_post_94.rebuild();" onclick="PDRTJS_896293_post_94.rate(3);" onmouseover="PDRTJS_896293_post_94.hover(3);" id="PDRTJS_896293_post_94_stars_3" style="background-size: 32px 48px!important; cursor: pointer; width: 16px; height: 16px; line-height: 16px; background: url(http://i0.poll.fm/ratings/images/star-yellow-sml.png) top left; float: left; padding: 0px; marging: 0px; margin-right: 1px;">&nbsp;</div><div class="rating-star-icon" onmouseout="PDRTJS_896293_post_94.rebuild();" onclick="PDRTJS_896293_post_94.rate(4);" onmouseover="PDRTJS_896293_post_94.hover(4);" id="PDRTJS_896293_post_94_stars_4" style="background-size: 32px 48px!important; cursor: pointer; width: 16px; height: 16px; line-height: 16px; background: url(http://i0.poll.fm/ratings/images/star-yellow-sml.png) top left; float: left; padding: 0px; marging: 0px; margin-right: 1px;">&nbsp;</div><div class="rating-star-icon" onmouseout="PDRTJS_896293_post_94.rebuild();" onclick="PDRTJS_896293_post_94.rate(5);" onmouseover="PDRTJS_896293_post_94.hover(5);" id="PDRTJS_896293_post_94_stars_5" style="background-size: 32px 48px!important; cursor: pointer; width: 16px; height: 16px; line-height: 16px; background: url(http://i0.poll.fm/ratings/images/star-yellow-sml.png) top left; float: left; padding: 0px; marging: 0px; margin-right: 1px;">&nbsp;</div></div><span style="float:left;">&nbsp;</span><div id="rating_info_896293_post_94" style="display:block;float:left;background:url(http://i0.poll.fm/images/ratings/info.png) no-repeat 3px 2px;width:16px;height:16px;cursor:pointer; null " onclick="javascript:PDRTJS_896293_post_94.togglePopup();return false;"><span style="display:none;">i</span></div><div class="pd_popup_holder" id="pd_popup_holder_896293_post_94">&nbsp;</div><div class="rating-msg" id="PDRTJS_896293_post_94_msg" style="float:left; padding-left: 5px; text-align: left; font:normal normal /16px ; color: #;">5 Votes</div><p style="padding: 0px; margin: 0px; clear: both;"></p><img src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/p-ab3gTb8xb3dLg.gif" style="display: none;" border="0" height="1" width="1" alt="Quantcast"></div><br><p>Hi, for my latest college assignment I had to find a way to visualize data that is interrelated. For instance, my application generated the following data:</p>
<pre>A --&gt; B
B --&gt; C
B --&gt; D</pre>
<p>And I needed a way to generate pretty graphs without too much headache!</p>
<p>I am already using wxPython for the application’s UI (it saved me a lot of time, and I learned a lot in the process, even implemented my own clone of the Aero Wizard layout used in Windows Vista and 7), so I tried to look for a way to integrate some other super powered library into my app. I quickly remembered a couple of projects that used Graphviz to generate visualizations of Django model definitions: <a href="http://code.djangoproject.com/wiki/DjangoGraphviz" target="_blank">DjangoGraphviz</a>, and <a href="http://code.google.com/p/django-graphviz/" target="_blank">django-graphviz</a>. I even hacked one of them to generate visualizations where each app had it’s own color. But these were complicated projects, because they generated some funky XML (correct me if I’m wrong) files that where later fed to graphviz and you had to mess a little with config options.</p>
<p>I wanted something simpler… lucky me, I stumbled into the wonderful project <a href="http://code.google.com/p/pydot/">pydot</a>. It was just what I needed, after a couple of experiments I could quickly generate “fantastic” visualizations with almost no extra effort. I’m using this on my Fedora 11 x86_64 box, so I just had to install pydot and easy_install handled the dependencies (it automatically downloaded and installed <a href="http://pyparsing.sourceforge.net/" target="_blank">pyparsing</a>), I am not sure what the requirements for Windows are… specially to get this running with py2exe, I’ll be blogging about that later.</p>
<p>In any case, let me provide you with a quick “getting started” tutorial guide on how this works.</p>
<h1>Example 1: “Easy as Pie”</h1>
<p>Ok, let’s try an easy one, suppose you have a set of data that you want to represent in a hierarchical way… Say: King, Lords and Vassals… Let’s try to graph that with as little code as we can:</p>
<p>See this code formatted in dpaste.org: <a href="http://dpaste.org/YQAZ/" target="_blank">http://dpaste.org/YQAZ/</a></p>
<pre># -*- coding: utf-8 -*-
"""
pydot example 1
@author: Federico Cáceres
@url: http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot
"""
import pydot # import pydot or you're not going to get anywhere my friend <img src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/icon_biggrin.gif" alt=":D" class="wp-smiley"> 

# first you create a new graph, you do that with pydot.Dot()
graph = pydot.Dot(graph_type='graph')

# the idea here is not to cover how to represent the hierarchical data
# but rather how to graph it, so I'm not going to work on some fancy
# recursive function to traverse a multidimensional array...
# I'm going to hardcode stuff... sorry if that offends you

# let's add the relationship between the king and vassals
for i in range(3):
    # we can get right into action by "drawing" edges between the nodes in our graph
    # we do not need to CREATE nodes, but if you want to give them some custom style
    # then I would recomend you to do so... let's cover that later
    # the pydot.Edge() constructor receives two parameters, a source node and a destination
    # node, they are just strings like you can see
    edge = pydot.Edge("king", "lord%d" % i)
    # and we obviosuly need to add the edge to our graph
    graph.add_edge(edge)

# now let us add some vassals
vassal_num = 0
for i in range(3):
    # we create new edges, now between our previous lords and the new vassals
    # let us create two vassals for each lord
    for j in range(2):
        edge = pydot.Edge("lord%d" % i, "vassal%d" % vassal_num)
        graph.add_edge(edge)
        vassal_num += 1

# ok, we are set, let's save our graph into a file
graph.write_png('example1_graph.png')

# and we are done!</pre>
<p>Simple, huh? You should have a graph like this:</p>
<div id="attachment_96" class="wp-caption aligncenter" style="width: 310px"><a href="http://pythonhaven.files.wordpress.com/2009/12/example1_graph.png"><img class="size-medium wp-image-96" title="example1&#39;s graph" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/example1_graph.png" alt="Graph generated by example 1" width="300" height="83"></a><p class="wp-caption-text">Graph generated by example 1</p></div>
<p>Now… that looks pretty boring, right? Let’s try something some more… colorful and with a different kind of graph.</p>
<h1>Example 2: “Still Easy as Pie”</h1>
<p>Ok, on the last example we made an undirected graph, let’s create a directed one now, and let’s also add some colors and labels on the edges between nodes. Say we have four nodes: A, B, C and D, were A points to B, B points to C, C points to D and D points back to A… let’s try that, ok?</p>
<p>See this code formatted in dpaste.org:&nbsp;<a href="http://dpaste.org/dSyE/" target="_blank">http://dpaste.org/dSyE/</a></p>
<pre><div id="_mcePaste"># -*- coding: utf-8 -*-
"""
pydot example 2
@author: Federico Cáceres
@url: http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot
"""
import pydot

# this time, in graph_type we specify we want a DIrected GRAPH
graph = pydot.Dot(graph_type='digraph')

# in the last example, we did no explicitly create nodes, we just created the edges and
# they automatically placed nodes on the graph. Unfortunately, this way we cannot specify
# custom styles for the nodes (although you CAN set a default style for all objects on
# the graph...), so let's create the nodes manually.

# creating nodes is as simple as creating edges!
node_a = pydot.Node("Node A", style="filled", fillcolor="red")
# but... what are all those extra stuff after "Node A"?
# well, these arguments define how the node is going to look on the graph,
# you can find a full reference here:
# http://www.graphviz.org/doc/info/attrs.html
# which in turn is part of the full docs in
# http://www.graphviz.org/Documentation.php

# neat, huh? Let us create the rest of the nodes!
node_b = pydot.Node("Node B", style="filled", fillcolor="green")
node_c = pydot.Node("Node C", style="filled", fillcolor="#0000ff")
node_d = pydot.Node("Node D", style="filled", fillcolor="#976856")

#ok, now we add the nodes to the graph
graph.add_node(node_a)
graph.add_node(node_b)
graph.add_node(node_c)
graph.add_node(node_d)

# and finally we create the edges
# to keep it short, I'll be adding the edge automatically to the graph instead
# of keeping a reference to it in a variable
graph.add_edge(pydot.Edge(node_a, node_b))
graph.add_edge(pydot.Edge(node_b, node_c))
graph.add_edge(pydot.Edge(node_c, node_d))
# but, let's make this last edge special, yes?
graph.add_edge(pydot.Edge(node_d, node_a, label="and back we go again", labelfontcolor="#009933", fontsize="10.0", color="blue"))

# and we are done
graph.write_png('example2_graph.png')

# this is too good to be true!</div></pre>
<p>That code generates this graph:</p>
<div id="attachment_97" class="wp-caption aligncenter" style="width: 242px"><a href="http://pythonhaven.files.wordpress.com/2009/12/example2_graph.png"><img class="size-medium wp-image-97" title="example&#39;2 Graph" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/example2_graph.png" alt="Graph generated in example 2" width="232" height="300"></a><p class="wp-caption-text">Graph generated in example 2</p></div>
<p>As you can see, the possibilities are endless, using the attributes you can set for each node, edge and other forms supported by the library, you can easily visualize your data that would otherwise be very hard to see.</p>
<p>One more thing, you can set the attributes when initializing the Node/Edge, or you can use the set_xyz method, for instance, instead of doing this:</p>
<pre><span style="font-family:Consolas, Monaco, &#39;Courier New&#39;, Courier, monospace;line-height:18px;font-size:12px;white-space:pre;">pydot.Edge(node_d, node_a, label="and back we go again", labelfontcolor="#009933", fontsize="10.0", color="blue")</span></pre>
<p>You could do this:</p>
<pre><span style="font-family:Consolas, Monaco, &#39;Courier New&#39;, Courier, monospace;line-height:18px;font-size:12px;white-space:pre;">edge = pydot.Edge(node_d, node_a)
edge.set_label("and back we go again")
edge.set_labelfontcolor("#009933")
edge.set_fontsize("10.0")
edge.set_color("blue")</span></pre>
<p>That can come in handy.</p>
<p>Well, I hope you found this useful as I have, and that this mini pydot tutorial helps you with this great library.</p>
<p>Don’t forget to visit these links:</p>
<ul>
<li>pydot site:&nbsp;<a href="http://code.google.com/p/pydot/" target="_blank">http://code.google.com/p/pydot/</a></li>
<li>graphviz site:&nbsp;<a href="http://www.graphviz.org/" target="_blank">http://www.graphviz.org/</a></li>
<li>graphviz gallery (crazy examples here!):&nbsp;<a href="http://www.graphviz.org/Gallery.php" target="_blank">http://www.graphviz.org/Gallery.php</a></li>
<li>graphviz documentation:&nbsp;<a href="http://www.graphviz.org/Documentation.php" target="_blank">http://www.graphviz.org/Documentation.php</a></li>
<li>graphviz documentation on attributes:&nbsp;<a href="http://www.graphviz.org/doc/info/attrs.html" target="_blank">http://www.graphviz.org/doc/info/attrs.html</a></li>
<li>link to another guy’s blog with a great example (Ben Atkin):&nbsp;<a href="http://benatkin.com/weblog/2009/04/27/graphing-retweets-with-python-and-graphviz/" target="_blank">http://benatkin.com/weblog/2009/04/27/graphing-retweets-with-python-and-graphviz/</a></li>
</ul>
<p>Till next time!</p>

<div class="wpadvert" style="position: relative; width: 400px; text-align: center; padding: 0px; margin: 10px auto; overflow: hidden;">
<a style="position: absolute; text-align: left; display: block; font: 9px/1 sans-serif; text-decoration: underline;" href="http://en.wordpress.com/about-these-ads/" rel="nofollow">About these ads</a>
<script type="text/javascript">
GA_googleAddAttr("AdOpt", "1");
GA_googleAddAttr("Origin", "other");
GA_googleAddAttr("LangId", "1");
GA_googleAddAttr("Domain", "pythonhaven.wordpress.com");
GA_googleAddAttr("BlogId", "6885959");
GA_googleAddAttr("Autotag", "science");
GA_googleAddAttr("Autotag", "technology");
GA_googleAddAttr("Tag", "graphs");
GA_googleAddAttr("Tag", "pydot");
GA_googleAddAttr("Tag", "python");
GA_googleAddAttr("Tag", "visualization");
GA_googleAddAttr("theme_bg", "ffffff"); 
GA_googleAddAttr("theme_border", "cccccc"); 
GA_googleAddAttr("theme_text", "000000"); 
GA_googleAddAttr("theme_link", "515151"); 
GA_googleAddAttr("theme_url", "f78b0c"); 
GA_googleAddAdSensePageAttr("google_page_url", "http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/");
GA_googleFillSlot("wpcom_below_post");
</script><script src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/ads"></script><div id="google_ads_div_wpcom_below_post_ad_wrapper">
<div id="google_ads_div_wpcom_below_post_ad_container" style="display:inline-block;">
<div class="sharethrough-placement" data-sharethrough-placement-key="6537986e" data-sharethrough-params="{ &quot;callback&quot; : &quot;//example.com/publisher_callback&quot; }" style="width:400px;height:267px;"><iframe src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/tt.htm" style="width: 400px; height: 267px;" frameborder="0" scrolling="no" marginheight="0" marginwidth="0" topmargin="0" leftmargin="0" allowtransparency="true"></iframe></div>
<script>
(function() {
  var t   = document.createElement('script');
  t.type  = 'text/javascript';
  t.async = true;
  t.src = '//apis.sharethrough.com/v0/tags.js';
  var s = document.getElementsByTagName('script')[0];
  s.parentNode.insertBefore(t, s);
})();
</script>


</div>
</div>

</div>
<style type="text/css">
div.wpadvert>div { margin-top: 1em; }
</style>
<script type="text/javascript">
jQuery( window ).load( function() {
    if ( jQuery(".wpadvert script[src*='shareth.ru']").length > 0 || jQuery(".wpadvert .sharethrough-placement").length > 0 ) {
        jQuery( '.wpadvert' ).css( 'width', '400px' );
    }
setTimeout(function(){if(typeof GS_googleAddAdSenseService !== 'function'){new Image().src=document.location.protocol+"//stats.wordpress.com/g.gif?v=wpcom-no-pv&x_noads=adblock&baba="+Math.random()}},100);
} );
</script>
<div id="jp-post-flair" class="sharedaddy sd-rating-enabled sd-like-enabled"><div class="wpl-likebox sd-block sd-like"><h3 class="sd-title">Like this:</h3><div class="sd-content"><div id="like-94" class="wpl-button "><a href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?like=1&source=post_flair&_wpnonce=5e900c5ad2" title="I like this." class="like needs-login sd-button" rel="nofollow"><span>Like</span></a></div><div class="wpl-count sd-like-count">One blogger likes this.</div><ul class="wpl-avatars sd-like-gravatars"><li><a href="http://gravatar.com/kingwolo" class="wpl-liker" rel="nofollow"><img src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/2fb3346e9d70c51ca5fdbae26971f397" class="avatar avatar-30 grav-hashed" alt="kingwolo" width="30" height="30" id="grav-2fb3346e9d70c51ca5fdbae26971f397-0"></a></li></ul></div></div></div>				</div>

				
			</div>

			<p class="navigation">
				<span class="alignleft">« <a href="http://pythonhaven.wordpress.com/2009/12/01/wxgrid-does-not-update-after-a-change-on-pygridtablebase/" rel="prev">wxGrid does not update after a change on&nbsp;PyGridTableBase</a></span>
				<span class="alignright"><a href="http://pythonhaven.wordpress.com/2010/10/15/fix-import-mercurial-problem-in-windows/" rel="next">Fix “import mercurial” problem in&nbsp;windows</a> »</span>
			</p>
			<br>
			<h3>Actions</h3>
			<ul class="postmetadata">
					<li class="with_icon"><img class="icon" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/feed-icon-16x16.gif" alt="rss">&nbsp;<a href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/feed/">Comments RSS</a></li>
							<li class="with_icon"><img class="icon" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/trackback-icon-16x16.gif" alt="trackback">&nbsp;<a href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/trackback/" rel="trackback" title="make a trackback">Trackback</a></li>
							</ul>

			<h3>Information</h3>
			<ul class="postmetadata">
					<!--<li>Author : Federico</li>-->
					<li>Date : December 9, 2009</li>
									<li>Tags: <a href="http://pythonhaven.wordpress.com/tag/graphs/" rel="tag">graphs</a>, <a href="http://pythonhaven.wordpress.com/tag/pydot/" rel="tag">pydot</a>, <a href="http://pythonhaven.wordpress.com/tag/python/" rel="tag">python</a>, <a href="http://pythonhaven.wordpress.com/tag/visualization/" rel="tag">visualization</a></li>
					<li>Categories : <a href="http://pythonhaven.wordpress.com/category/uncategorized/" title="View all posts in Uncategorized" rel="category tag">Uncategorized</a></li>
							</ul>

				<h3 id="comments">17 responses</h3>

	<dl class="commentlist">
	
	<dt class=" none">
		<small class="date">
			<span class="date_day">9</span>
			<span class="date_month">12</span>
			<span class="date_year">2009</span>
		</small>
	</dt>

	<dd class="comment even thread-even depth-1 commentlist_item parent highlander-comment" id="comment-48">

		<div class="comment" id="div-comment-48">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/10a836ff08ac1d4082339e6cde68a084" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-10a836ff08ac1d4082339e6cde68a084-0">
			<span class="fn">Kenny Meyer</span></strong> <span class="comment-meta commentmetadata"><small>(21:28:19)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Nice demonstration! Creating such diagrams in a Django powered website is a nice idea…</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=48#respond" onclick="return addComment.moveForm(&quot;div-comment-48&quot;, &quot;48&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" author_comment">
		<small class="date">
			<span class="date_day">9</span>
			<span class="date_month">12</span>
			<span class="date_year">2009</span>
		</small>
	</dt>

	<dd class="comment byuser comment-author-fredpyo bypostauthor odd alt depth-2 commentlist_item highlander-comment" id="comment-49">

		<div class="comment" id="div-comment-49">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/3e2d818ceace222dec002f0161309d1f" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-3e2d818ceace222dec002f0161309d1f-0">
			<span class="fn">Federico</span></strong> <span class="comment-meta commentmetadata"><small>(22:24:47)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Indeed, it is both fun and informative! It’s always easier to see problems in your design when it is displayed in graphs. You should check out those two projects I mentioned at the beginning of the post. I’m not sure if the are the same… or if one is the fork of another…. or if they are completely different, but I remember I used django-graphviz and it was excellent, it worked really well!</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=49#respond" onclick="return addComment.moveForm(&quot;div-comment-49&quot;, &quot;49&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" none">
		<small class="date">
			<span class="date_day">3</span>
			<span class="date_month">06</span>
			<span class="date_year">2011</span>
		</small>
	</dt>

	<dd class="comment even thread-odd thread-alt depth-1 commentlist_item highlander-comment" id="comment-81">

		<div class="comment" id="div-comment-81">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/86843f544f95f7b944a474d1e9347766" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-86843f544f95f7b944a474d1e9347766-0">
			<span class="fn"><a href="http://www.tulios.net/" rel="external nofollow" class="url">Túlio</a></span></strong> <span class="comment-meta commentmetadata"><small>(10:19:28)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Good examples…<br>
It will be perfect for my project.</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=81#respond" onclick="return addComment.moveForm(&quot;div-comment-81&quot;, &quot;81&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" none">
		<small class="date">
			<span class="date_day">12</span>
			<span class="date_month">07</span>
			<span class="date_year">2011</span>
		</small>
	</dt>

	<dd class="comment odd alt thread-even depth-1 commentlist_item parent highlander-comment" id="comment-82">

		<div class="comment" id="div-comment-82">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/253e2e3f2300442ac7481ad390180d09" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-253e2e3f2300442ac7481ad390180d09-0">
			<span class="fn">Carla</span></strong> <span class="comment-meta commentmetadata"><small>(15:00:15)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Thanks a lot!<br>
It was not being easy for me to understand how to work with pydot, but after reading your post everything is clear <img src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=82#respond" onclick="return addComment.moveForm(&quot;div-comment-82&quot;, &quot;82&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" author_comment">
		<small class="date">
			<span class="date_day">12</span>
			<span class="date_month">07</span>
			<span class="date_year">2011</span>
		</small>
	</dt>

	<dd class="comment byuser comment-author-fredpyo bypostauthor even depth-2 commentlist_item parent highlander-comment" id="comment-83">

		<div class="comment" id="div-comment-83">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/3e2d818ceace222dec002f0161309d1f" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-3e2d818ceace222dec002f0161309d1f-1">
			<span class="fn">Federico</span></strong> <span class="comment-meta commentmetadata"><small>(15:05:17)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Glad to hear my humble two year old post is still useful <img src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/icon_smile.gif" alt=":)" class="wp-smiley"> .</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=83#respond" onclick="return addComment.moveForm(&quot;div-comment-83&quot;, &quot;83&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" none">
		<small class="date">
			<span class="date_day">16</span>
			<span class="date_month">04</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment odd alt depth-3 commentlist_item parent highlander-comment" id="comment-98">

		<div class="comment" id="div-comment-98">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/50ae7820dc8962affc06ac890afd4340" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-50ae7820dc8962affc06ac890afd4340-0">
			<span class="fn">Horacio!</span></strong> <span class="comment-meta commentmetadata"><small>(10:17:52)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Federico! Fancy seeing you here!</p>
			</div>
			<div class="reply">
							</div>
		</div>
	</dd>

	<dt class=" author_comment">
		<small class="date">
			<span class="date_day">16</span>
			<span class="date_month">04</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment byuser comment-author-fredpyo bypostauthor even depth-3 commentlist_item highlander-comment" id="comment-102">

		<div class="comment" id="div-comment-102">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/3e2d818ceace222dec002f0161309d1f" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-3e2d818ceace222dec002f0161309d1f-2">
			<span class="fn">Federico</span></strong> <span class="comment-meta commentmetadata"><small>(11:18:33)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Welcome to my humble (and not so updated) blog!</p>
			</div>
			<div class="reply">
							</div>
		</div>
	</dd>

	<dt class=" none">
		<small class="date">
			<span class="date_day">19</span>
			<span class="date_month">10</span>
			<span class="date_year">2011</span>
		</small>
	</dt>

	<dd class="comment byuser comment-author-kingwolo odd alt thread-odd thread-alt depth-1 commentlist_item highlander-comment" id="comment-85">

		<div class="comment" id="div-comment-85">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/2fb3346e9d70c51ca5fdbae26971f397(1)" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-2fb3346e9d70c51ca5fdbae26971f397-1">
			<span class="fn">kingwolo</span></strong> <span class="comment-meta commentmetadata"><small>(07:15:59)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Just what I needed, thanks <img src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/icon_smile.gif" alt=":)" class="wp-smiley"> </p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=85#respond" onclick="return addComment.moveForm(&quot;div-comment-85&quot;, &quot;85&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" none">
		<small class="date">
			<span class="date_day">25</span>
			<span class="date_month">01</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment even thread-even depth-1 commentlist_item parent highlander-comment" id="comment-94">

		<div class="comment" id="div-comment-94">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/dec7d475e38b85b9eea4fcf0b799670c" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-dec7d475e38b85b9eea4fcf0b799670c-0">
			<span class="fn">Raj</span></strong> <span class="comment-meta commentmetadata"><small>(22:37:41)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Federico … Is there a way to visualize the graph without saving it as a png file? In other words, can we use a GUI libraries like wx to read and display the graph from main memory? Thanks, Raj</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=94#respond" onclick="return addComment.moveForm(&quot;div-comment-94&quot;, &quot;94&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" author_comment">
		<small class="date">
			<span class="date_day">16</span>
			<span class="date_month">04</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment byuser comment-author-fredpyo bypostauthor odd alt depth-2 commentlist_item highlander-comment" id="comment-101">

		<div class="comment" id="div-comment-101">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/3e2d818ceace222dec002f0161309d1f" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-3e2d818ceace222dec002f0161309d1f-3">
			<span class="fn">Federico</span></strong> <span class="comment-meta commentmetadata"><small>(11:17:15)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Hi Raj, I made an app with wxpython and pydot that “drew” graphs in realtime according to a grid that the user can use to model the graph (<a href="http://code.google.com/p/pyflowuca/" rel="nofollow">http://code.google.com/p/pyflowuca/</a>). Unfortunately the source code is in spanish, but let me tell you how I did it. I just created the graphs on a temporary file using python’s <a href="http://docs.python.org/library/tempfile.html" title="Python doc on tempfile module" rel="nofollow">tempfile</a> module and loaded the file using wxPython bitmap loading functions. Just remember to delete the file once you’re done.</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=101#respond" onclick="return addComment.moveForm(&quot;div-comment-101&quot;, &quot;101&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" none">
		<small class="date">
			<span class="date_day">23</span>
			<span class="date_month">02</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment even thread-odd thread-alt depth-1 commentlist_item parent highlander-comment" id="comment-96">

		<div class="comment" id="div-comment-96">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/4d55be43ceabebe84c7c7aa4cc9f3999" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-4d55be43ceabebe84c7c7aa4cc9f3999-0">
			<span class="fn">Alan Yeung</span></strong> <span class="comment-meta commentmetadata"><small>(13:24:16)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Cool, looking at directive graphs in Python right now, the python-graph looks good but couldnt get it working with the brief amount of time spent today. This pydot seems to work out of the box, sweet.</p>
<p>Did you ever get this runing with py2exe??</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=96#respond" onclick="return addComment.moveForm(&quot;div-comment-96&quot;, &quot;96&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" author_comment">
		<small class="date">
			<span class="date_day">16</span>
			<span class="date_month">04</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment byuser comment-author-fredpyo bypostauthor odd alt depth-2 commentlist_item highlander-comment" id="comment-100">

		<div class="comment" id="div-comment-100">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/3e2d818ceace222dec002f0161309d1f" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-3e2d818ceace222dec002f0161309d1f-4">
			<span class="fn">Federico</span></strong> <span class="comment-meta commentmetadata"><small>(11:12:23)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Hi Alan, pydot is indeed very simple to get working and use. I don’t remember having to do anything special to make pydot work with py2exe, did you get it working?</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=100#respond" onclick="return addComment.moveForm(&quot;div-comment-100&quot;, &quot;100&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" none">
		<small class="date">
			<span class="date_day">28</span>
			<span class="date_month">02</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment even thread-even depth-1 commentlist_item parent highlander-comment" id="comment-97">

		<div class="comment" id="div-comment-97">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/1d799f14749b0f407d607e7fb59d203b" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-1d799f14749b0f407d607e7fb59d203b-0">
			<span class="fn">samba</span></strong> <span class="comment-meta commentmetadata"><small>(18:41:31)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>made so easy \m/<br>
any pointers for pydot+boost to work in python?</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=97#respond" onclick="return addComment.moveForm(&quot;div-comment-97&quot;, &quot;97&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" author_comment">
		<small class="date">
			<span class="date_day">16</span>
			<span class="date_month">04</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment byuser comment-author-fredpyo bypostauthor odd alt depth-2 commentlist_item highlander-comment" id="comment-99">

		<div class="comment" id="div-comment-99">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/3e2d818ceace222dec002f0161309d1f" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-3e2d818ceace222dec002f0161309d1f-5">
			<span class="fn">Federico</span></strong> <span class="comment-meta commentmetadata"><small>(11:08:23)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>I’m glad this was useful for you! Unfortunately I have no experience on boost, sorry I can’t help you on that.</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=99#respond" onclick="return addComment.moveForm(&quot;div-comment-99&quot;, &quot;99&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" none">
		<small class="date">
			<span class="date_day">23</span>
			<span class="date_month">04</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment even thread-odd thread-alt depth-1 commentlist_item highlander-comment" id="comment-103">

		<div class="comment" id="div-comment-103">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/4d55be43ceabebe84c7c7aa4cc9f3999" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-4d55be43ceabebe84c7c7aa4cc9f3999-1">
			<span class="fn">Alan Yeung</span></strong> <span class="comment-meta commentmetadata"><small>(06:59:45)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Hi Federico, </p>
<p>I can build to .exe but it still requires the Graphviz.exe.</p>
<p>All the libs I have seen (pydot, pygraphviz) all need Graphviz installed on the computer. The issue I am having is directing Pydot or PyGraphviz to the relevant DLL’s which Py2exe pulls out correctly. </p>
<p>For example when I use PyGraphviz it references the Graphviz exe’s through an import _graphviz (which is .pyd file that calls the Graphviz .exe’s). </p>
<p>Still digging… in essence I would of thought that there was simple Pyhon libs to go from .dot to .svg without this Graphviz??  Also seen WinGraphviz.dll which I think is independant of Graphviz, just need to figure out how to use it.</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=103#respond" onclick="return addComment.moveForm(&quot;div-comment-103&quot;, &quot;103&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" none">
		<small class="date">
			<span class="date_day">26</span>
			<span class="date_month">09</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment odd alt thread-even depth-1 commentlist_item highlander-comment" id="comment-109">

		<div class="comment" id="div-comment-109">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/picture" class="avatar avatar-32" height="32" width="32">
			<span class="fn"><a href="http://www.facebook.com/mina.metias" rel="external nofollow" class="url">Mina Metias</a></span></strong> <span class="comment-meta commentmetadata"><small>(05:49:31)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Thank you so much, this was really straight to the point.<br>
I wonder why pydot has such a poor documentation.</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=109#respond" onclick="return addComment.moveForm(&quot;div-comment-109&quot;, &quot;109&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>

	<dt class=" none">
		<small class="date">
			<span class="date_day">17</span>
			<span class="date_month">11</span>
			<span class="date_year">2012</span>
		</small>
	</dt>

	<dd class="comment even thread-odd thread-alt depth-1 commentlist_item highlander-comment" id="comment-112">

		<div class="comment" id="div-comment-112">
			<strong class="comment-author vcard author" style="height:32px;line-height:32px;">
			<img alt="" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/c4651108a7888ab022ca26fb84bae616" class="avatar avatar-32 grav-hashed grav-hijack" height="32" width="32" id="grav-c4651108a7888ab022ca26fb84bae616-0">
			<span class="fn"><a href="http://www.nanex.net/" rel="external nofollow" class="url">Nate Rock</a></span></strong> <span class="comment-meta commentmetadata"><small>(14:21:55)</small> : </span>
			
			<br style="display:none;">

			<div class="comment_text">
			<p>Thank you very much. This got me up and running with pydot in about 10 min. The one thing I didn’t do was have GraphViz installed before trying to run the code. After installing GraphViz it on Win 7 x64, it was smooth sailing.</p>
			</div>
			<div class="reply">
				<a class="comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/?replytocom=112#respond" onclick="return addComment.moveForm(&quot;div-comment-112&quot;, &quot;112&quot;, &quot;respond&quot;, &quot;94&quot;)">Reply</a>			</div>
		</div>
	</dd>
	</dl>
	<div class="navigation">
		<div class="alignleft"></div>
		<div class="alignright"></div>
	</div>


								<div id="respond" class="js">
				<h3 id="reply-title">Leave a Reply <small><a rel="nofollow" id="cancel-comment-reply-link" href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/#respond" style="display:none;">Cancel reply</a></small></h3>
									<form action="http://pythonhaven.wordpress.com/wp-comments-post.php" method="post" id="commentform">
																										


												
<input type="hidden" name="hc_post_as" id="hc_post_as" value="guest">

<div class="comment-form-field comment-textarea">
	
	<div id="comment-form-comment"><textarea placeholder="Enter your comment here..." style="height: 38px; resize: none; overflow-y: hidden; position: absolute; top: 0px; left: -9999px; width: 488px; line-height: 18.200000762939453px; text-decoration: initial; letter-spacing: 0px;" tabindex="-1"></textarea><textarea id="comment" name="comment" placeholder="Enter your comment here..." style="height: 38px; resize: none; overflow-y: hidden;"></textarea></div>
</div>

<div id="comment-form-identity" style="display: none;">

	<div id="comment-form-nascar">
		<p>Fill in your details below or click an icon to log in:</p>
		<ul>
			<li class="selected" style="display:none;">
				<a href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/#comment-form-guest" id="postas-guest" title="Guest">
					<span></span>
				</a>
			</li>
			<li>
				<a href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/#comment-form-load-service:WordPress.com" id="postas-wordpress" title="WordPress.com">
					<span></span>
				</a>
			</li>
			<li>
				<a href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/#comment-form-load-service:Twitter" id="postas-twitter" title="Twitter">
					<span></span>
				</a>
			</li>
			<li>
				<a href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/#comment-form-load-service:Facebook" id="postas-facebook" title="Facebook">
					<span></span>
				</a>
			</li>
		</ul>
	</div>

	<div id="comment-form-guest" class="comment-form-service selected">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
<a href="https://gravatar.com/site/signup/" target="_blank">				<img src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/ad516503a11cd5ca435acc9bb6523536" alt="Gravatar" width="25" class="no-grav">
</a>			</div>

				<div class="comment-form-fields">
				<div class="comment-form-field comment-form-email">
					<label for="email">Email <span class="required">(required)</span> <span class="nopublish">(Address never made public)</span></label>
					<div class="comment-form-input"><input id="email" name="email" type="email" value=""></div>
				</div>
				<div class="comment-form-field comment-form-author">
					<label for="author">Name <span class="required">(required)</span></label>
					<div class="comment-form-input"><input id="author" name="author" type="text" value=""></div>
				</div>
				<div class="comment-form-field comment-form-url">
					<label for="url">Website</label>
					<div class="comment-form-input"><input id="url" name="url" type="text" value=""></div>
				</div> 
			</div>
	
		</div>
	</div>

	<div id="comment-form-wordpress" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/wplogo.png" alt="WordPress.com Logo" width="25" class="no-grav">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="wp_avatar" id="wordpress-avatar" class="comment-meta-wordpress" value="">
				<input type="hidden" name="wp_user_id" id="wordpress-user_id" class="comment-meta-wordpress" value="">
				<input type="hidden" name="wp_access_token" id="wordpress-access_token" class="comment-meta-wordpress" value="">
				<p class="comment-form-posting-as pa-wordpress"><strong></strong> You are commenting using your WordPress.com account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'wordpress' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>

	<div id="comment-form-twitter" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/ad516503a11cd5ca435acc9bb6523536" alt="Twitter picture" width="25" class="no-grav">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="twitter_avatar" id="twitter-avatar" class="comment-meta-twitter" value="">
				<input type="hidden" name="twitter_user_id" id="twitter-user_id" class="comment-meta-twitter" value="">
				<input type="hidden" name="twitter_access_token" id="twitter-access_token" class="comment-meta-twitter" value="">
				<p class="comment-form-posting-as pa-twitter"><strong></strong> You are commenting using your Twitter account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'twitter' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>

	<div id="comment-form-facebook" class="comment-form-service">
		<div class="comment-form-padder">
			<div class="comment-form-avatar">
				<img src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/ad516503a11cd5ca435acc9bb6523536" alt="Facebook photo" width="25" class="no-grav">
			</div>

				<div class="comment-form-fields">
				<input type="hidden" name="fb_avatar" id="facebook-avatar" class="comment-meta-facebook" value="">
				<input type="hidden" name="fb_user_id" id="facebook-user_id" class="comment-meta-facebook" value="">
				<input type="hidden" name="fb_access_token" id="facebook-access_token" class="comment-meta-facebook" value="">
				<p class="comment-form-posting-as pa-facebook"><strong></strong> You are commenting using your Facebook account. <span class="comment-form-log-out">(&nbsp;<a href="javascript:HighlanderComments.doExternalLogout( 'facebook' );">Log&nbsp;Out</a>&nbsp;/&nbsp;<a href="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/#" onclick="javascript:HighlanderComments.switchAccount();return false;">Change</a>&nbsp;)</span></p>
			</div>
	
		</div>
	</div>


	<div id="comment-form-load-service" class="comment-form-service">
		<div class="comment-form-posting-as-cancel"><a href="javascript:HighlanderComments.cancelExternalWindow();">Cancel</a></div>
		<p>Connecting to %s</p>
	</div>
	
	
</div>

<script type="text/javascript">
jQuery(document).ready(function(){
	var input = document.createElement( 'input' ),
	    comment = jQuery( '#comment' );

	if ( 'placeholder' in input ) {
		comment.attr( 'placeholder', jQuery( '.comment-textarea label' ).remove().text() );
	}

	// Expando Mode: start small, then auto-resize on first click + text length
	jQuery( '#comment-form-identity' ).hide();
	jQuery( '#comment-form-subscribe' ).hide();
	jQuery( '#commentform .form-submit' ).hide();

	comment.css( { 'height':'10px' } ).one( 'focus', function() {
		var timer = setInterval( HighlanderComments.resizeCallback, 10 )
		jQuery( this ).animate( { 'height': HighlanderComments.initialHeight } ).delay( 100 ).queue( function(n) { clearInterval( timer ); HighlanderComments.resizeCallback(); n(); } );
		jQuery( '#comment-form-identity' ).slideDown();
		jQuery( '#comment-form-subscribe' ).slideDown();
		jQuery( '#commentform .form-submit' ).slideDown();
	});
});
</script>

<div id="comment-form-subscribe" style="display: none;"> 
	<p class="comment-subscription-form"><input type="checkbox" name="subscribe" id="subscribe" value="subscribe" style="width: auto;" tabindex="6"> <label class="subscribe-label" id="subscribe-label" for="subscribe">Notify me of follow-up comments via email.</label></p></div>

												<p class="form-submit" style="display: none;">
							<input name="submit" type="submit" id="comment-submit" value="Post Comment">
							<input type="hidden" name="comment_post_ID" value="94" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
						</p>
						
<input type="hidden" name="genseq" value="1357609969">
<p style="display: none;"><input type="hidden" id="akismet_comment_nonce" name="akismet_comment_nonce" value="e0c1db921c"></p><script type="text/javascript" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/form.js"></script>
<p style="display: none;"><input type="hidden" id="ak_js" name="ak_js" value="1357609970841"></p>					</form>
							</div><!-- #respond -->
			<div style="clear: both"></div>			
		
	<!-- nothing found -->
	
	</div>

	<hr style="display:none">

	<!-- sidebar -->
	
	<div id="sidebar">
				<div>
		<div id="search-2" class="widget widget_search"><form method="get" id="searchform" action="http://pythonhaven.wordpress.com/">
<p>
<input size="12" type="text" value="" name="s" id="s"><input class="btn" type="submit" id="searchsubmit" value="Search">
</p>
</form>
</div><div id="wp_tag_cloud" class="widget wp_widget_tag_cloud"><h2 class="title">Tags</h2><div style="overflow:hidden"><a href="http://pythonhaven.wordpress.com/tag/ajax/" class="tag-link-141" title="2 topics" style="font-size: 11.405405405405pt;">ajax</a>
<a href="http://pythonhaven.wordpress.com/tag/apache/" class="tag-link-3768" title="2 topics" style="font-size: 11.405405405405pt;">apache</a>
<a href="http://pythonhaven.wordpress.com/tag/chat/" class="tag-link-4870" title="2 topics" style="font-size: 11.405405405405pt;">chat</a>
<a href="http://pythonhaven.wordpress.com/tag/configuration/" class="tag-link-45809" title="1 topic" style="font-size: 8pt;">configuration</a>
<a href="http://pythonhaven.wordpress.com/tag/db/" class="tag-link-4667" title="3 topics" style="font-size: 13.675675675676pt;">db</a>
<a href="http://pythonhaven.wordpress.com/tag/django/" class="tag-link-15988" title="7 topics" style="font-size: 19.351351351351pt;">django</a>
<a href="http://pythonhaven.wordpress.com/tag/eclipse/" class="tag-link-18466" title="1 topic" style="font-size: 8pt;">eclipse</a>
<a href="http://pythonhaven.wordpress.com/tag/general/" class="tag-link-54" title="1 topic" style="font-size: 8pt;">general</a>
<a href="http://pythonhaven.wordpress.com/tag/graphs/" class="tag-link-26843" title="1 topic" style="font-size: 8pt;">graphs</a>
<a href="http://pythonhaven.wordpress.com/tag/javascript/" class="tag-link-457" title="2 topics" style="font-size: 11.405405405405pt;">javascript</a>
<a href="http://pythonhaven.wordpress.com/tag/jquery/" class="tag-link-203308" title="2 topics" style="font-size: 11.405405405405pt;">jquery</a>
<a href="http://pythonhaven.wordpress.com/tag/json/" class="tag-link-72721" title="2 topics" style="font-size: 11.405405405405pt;">json</a>
<a href="http://pythonhaven.wordpress.com/tag/linux/" class="tag-link-610" title="1 topic" style="font-size: 8pt;">linux</a>
<a href="http://pythonhaven.wordpress.com/tag/managepy/" class="tag-link-7737715" title="1 topic" style="font-size: 8pt;">manage.py</a>
<a href="http://pythonhaven.wordpress.com/tag/mercurial/" class="tag-link-220805" title="1 topic" style="font-size: 8pt;">mercurial</a>
<a href="http://pythonhaven.wordpress.com/tag/model/" class="tag-link-8846" title="4 topics" style="font-size: 15.567567567568pt;">model</a>
<a href="http://pythonhaven.wordpress.com/tag/mod_wsgi/" class="tag-link-7919575" title="2 topics" style="font-size: 11.405405405405pt;">mod_wsgi</a>
<a href="http://pythonhaven.wordpress.com/tag/postgresql/" class="tag-link-15989" title="2 topics" style="font-size: 11.405405405405pt;">postgresql</a>
<a href="http://pythonhaven.wordpress.com/tag/py2exe/" class="tag-link-6752484" title="1 topic" style="font-size: 8pt;">py2exe</a>
<a href="http://pythonhaven.wordpress.com/tag/pydev/" class="tag-link-1234361" title="1 topic" style="font-size: 8pt;">pydev</a>
<a href="http://pythonhaven.wordpress.com/tag/pydot/" class="tag-link-15966676" title="1 topic" style="font-size: 8pt;">pydot</a>
<a href="http://pythonhaven.wordpress.com/tag/python/" class="tag-link-832" title="10 topics" style="font-size: 22pt;">python</a>
<a href="http://pythonhaven.wordpress.com/tag/server/" class="tag-link-18568" title="1 topic" style="font-size: 8pt;">server</a>
<a href="http://pythonhaven.wordpress.com/tag/social/" class="tag-link-3457" title="1 topic" style="font-size: 8pt;">social</a>
<a href="http://pythonhaven.wordpress.com/tag/subclipse/" class="tag-link-584580" title="1 topic" style="font-size: 8pt;">subclipse</a>
<a href="http://pythonhaven.wordpress.com/tag/trac/" class="tag-link-27507" title="1 topic" style="font-size: 8pt;">trac</a>
<a href="http://pythonhaven.wordpress.com/tag/virtual-box/" class="tag-link-633122" title="1 topic" style="font-size: 8pt;">virtual box</a>
<a href="http://pythonhaven.wordpress.com/tag/visualization/" class="tag-link-44111" title="1 topic" style="font-size: 8pt;">visualization</a>
<a href="http://pythonhaven.wordpress.com/tag/windows/" class="tag-link-800" title="3 topics" style="font-size: 13.675675675676pt;">windows</a>
<a href="http://pythonhaven.wordpress.com/tag/wxpython/" class="tag-link-21799" title="2 topics" style="font-size: 11.405405405405pt;">wxPython</a></div></div><div id="linkcat-17926" class="widget widget_links"><h2 class="title">Links of Interest</h2>
	<ul class="xoxo blogroll">
<li><a href="http://www.djangoproject.org/" title="A web development framework written in the Python language, great for perfectionists." target="_blank">Django</a></li>
<li><a href="http://www.eclipse.org/" title="A great IDE very popular for it’s open modular design." target="_blank">Eclipse IDE</a></li>
<li><a href="http://www.postgresql.org/" title="Excellent Open Source DBMS." target="_blank">PostgreSQL</a></li>
<li><a href="http://pydev.sourceforge.net/" title="Pydev allows you and me to edit Python and Jython scripts under the Eclipse IDE!">Pydev</a></li>
<li><a href="http://www.python.org/" title="The homepage for the excellent dynamic programming language. Don’t miss it!" target="_blank">Python Programming Language</a></li>
<li><a href="http://subclipse.tigris.org/" title="Plugin for SVN connectivy for the Eclipse IDE." target="_blank">Subclipse</a></li>

	</ul>
</div>
		</div>
	</div>

	<br style="clear:both"><!-- without this little <br /> NS6 and IE5PC do not stretch the frame div down to encopass the content DIVs -->
</div>

<!-- footer -->

		<hr style="display:none">

		<div id="footer">
			<small class="footer_content">
			<a href="http://wordpress.com/?ref=footer" rel="generator">Blog at WordPress.com</a>. Theme: <a href="http://theme.wordpress.com/themes/freshy/" title="Learn more about this theme">Freshy</a> by <a href="http://www.jide.fr/" rel="designer">Jide</a>.			</small>
		</div>

	</div> <!--- end of the <div id="wrapper"> (from header.php) -->
</div> <!--- end of the <div id="page"> (from header.php) -->


<script type="text/javascript">
var _qevents = _qevents || [], wpcomQuantcastData = {"qacct":"p-18-mFEk4J448M","labels":",language.en,type.wpcom,posttag.graphs,posttag.pydot,posttag.python,posttag.visualization,as"};
function wpcomQuantcastPixel( labels, options ) {
	var i, defaults = wpcomQuantcastData, data = { event: 'ajax' };

	labels  = labels  || '';
	options = options || {};

	if ( typeof labels != 'string' )
		options = labels;

	for ( i in defaults ) {
		data[i] = defaults[i];
	}

	for ( i in options ) {
		data[i] = options[i];
	}

	if ( data.labels ) {
		data.labels += ',' + labels;
	} else {
		data.labels = labels;
	}

	_qevents.push( data );
};
(function() {var elem = document.createElement('script');elem.src = (document.location.protocol == "https:" ? "https://secure" : "http://edge") + ".quantserve.com/quant.js";elem.async = true;elem.type = "text/javascript";var scpt = document.getElementsByTagName('script')[0];scpt.parentNode.insertBefore(elem, scpt);  })();
_qevents.push( wpcomQuantcastData );
</script>
<noscript>&lt;div style="display: none;"&gt;&lt;img src="//pixel.quantserve.com/pixel/p-18-mFEk4J448M.gif?labels=%2Clanguage.en%2Ctype.wpcom%2Cposttag.graphs%2Cposttag.pydot%2Cposttag.python%2Cposttag.visualization%2Cas" height="1" width="1" alt="" /&gt;&lt;/div&gt;</noscript>


	<script type="text/javascript">
	/* <![CDATA[ */
	(function($){
		$(document).on( 'ready post-load', function() {

			// Remove the login box when clicking the page
			$( document ).mousedown( function( e ) {
				if ( null == $( e.target ).closest( '#wpl-mustlogin' ).get( 0 ) ) {
					$( '#wpl-mustlogin' ).remove();
				}
			});

			// Handle clicking the like button itself
			$('.wpl-button > a.like').click( function(e) {
				e.preventDefault();

				var postid = $(this).parent().attr('id').split('like-')[1];
				$.post( 'http://pythonhaven.wordpress.com/wp-admin/admin-ajax.php', {
					'action': 'wpl_record_stat',
					'stat_name': 'loggedout_like_click'
				} );

				var tenMins = new Date();
				tenMins.setTime( tenMins.getTime() + 600000 );
				document.cookie = 'wpl_rand=aaf2713636; expires=' + tenMins.toGMTString() + '; domain=wordpress.com; path=/;';

				$(this).parent().siblings('.wpl-count').after( '\
					<div id="wpl-mustlogin"> \
						<form action="https://pythonhaven.wordpress.com/wp-login.php" method="post"> \
							<p>Just one more step to like this:</p> \
							<label><span>Username</span> <input type="text" name="log" id="user_login" class="input" value="" size="20" tabindex="80" /></label> \
							<label><span>Password</span> <input type="password" name="pwd" id="user_pass" class="input" value="" size="20" tabindex="81" /></label> \
							<input type="submit" name="wp-submit" id="wp-submit" class="button-primary" value="Log In" tabindex="82" /> \
							<input type="hidden" name="postid" value="' + postid + '" /> \
							<input type="hidden" name="redirect_to" value="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot?year=2009&#038;monthnum=12&#038;day=09&#038;name=generating_graphs_with_pydot&#038;like=1" /> \
							<input type="hidden" name="wpl_rand" value="aaf2713636" /> \
							<p>Not a member yet? <a href="http://wordpress.com/signup/?ref=likebox&user=1" id="wpl-signup-link">Sign up with WordPress.com for free</a></p> \
						</form> \
					</div> \
				');

				$('#wpl-mustlogin').hide().slideDown('fast');
			} );

			$('#wpl-mustlogin input.input').live( 'focus', function() {
				$(this).prev().hide();
			}).live( 'blur', function() {
				if ( $(this).val() == '' ) {
					$(this).prev().show();
				}
			});

			$('#wpl-mustlogin input#wp-submit').live( 'click', function(e) {
				e.preventDefault();

				$.post( 'http://pythonhaven.wordpress.com/wp-admin/admin-ajax.php', {
					'action': 'wpl_record_stat',
					'stat_name': 'loggedout_login_submit'
				}, function() {
					$('#wpl-mustlogin form').submit();
				} );
			});

			$('#wpl-mustlogin a#wpl-signup-link').live( 'click', function(e) {
				e.preventDefault();

				var link = $(this).attr('href');

				$.post( 'http://pythonhaven.wordpress.com/wp-admin/admin-ajax.php', {
					'action': 'wpl_record_stat',
					'stat_name': 'loggedout_signup_click'
				}, function() {
					location.href = link;
				} );
			});
		})
	})(jQuery);
	/* ]]> */
	</script>
<script type="text/javascript" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/gprofiles.js"></script>
<script type="text/javascript">
/* <![CDATA[ */
var WPGroHo = {"my_hash":""};
/* ]]> */
</script>
<script type="text/javascript" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/wpgroho.js"></script>
<script>jQuery(document).ready(function($){ Gravatar.profile_cb = function( h, d ) { WPGroHo.syncProfileData( h, d );	}; Gravatar.my_hash = WPGroHo.my_hash; Gravatar.init( 'body', '#wp-admin-bar-my-account' ); });</script>	<div style="display:none">
	<div class="grofile-hash-map-10a836ff08ac1d4082339e6cde68a084">
	</div>
	<div class="grofile-hash-map-3e2d818ceace222dec002f0161309d1f">
	</div>
	<div class="grofile-hash-map-86843f544f95f7b944a474d1e9347766">
	</div>
	<div class="grofile-hash-map-253e2e3f2300442ac7481ad390180d09">
	</div>
	<div class="grofile-hash-map-50ae7820dc8962affc06ac890afd4340">
	</div>
	<div class="grofile-hash-map-2fb3346e9d70c51ca5fdbae26971f397">
	</div>
	<div class="grofile-hash-map-dec7d475e38b85b9eea4fcf0b799670c">
	</div>
	<div class="grofile-hash-map-4d55be43ceabebe84c7c7aa4cc9f3999">
	</div>
	<div class="grofile-hash-map-1d799f14749b0f407d607e7fb59d203b">
	</div>
	<div class="grofile-hash-map-74a1d22f7d89ccf3d76386d3aafb5e4e">
	</div>
	<div class="grofile-hash-map-c4651108a7888ab022ca26fb84bae616">
	</div>
	</div>
<script type="text/javascript">
/* <![CDATA[ */
var HighlanderComments = {"loggingInText":"Logging In\u2026","submittingText":"Posting Comment\u2026","postCommentText":"Post Comment","connectingToText":"Connecting to %s","commentingAsText":"%1$s: You are commenting using your %2$s account.","logoutText":"Log Out","loginText":"Log In","connectURL":"http:\/\/pythonhaven.wordpress.com\/public.api\/connect\/?action=request","logoutURL":"http:\/\/pythonhaven.wordpress.com\/wp-login.php?action=logout&_wpnonce=8d2da6b030","homeURL":"http:\/\/pythonhaven.wordpress.com\/","postID":"94","gravDefault":"identicon","enterACommentError":"Please enter a comment","enterEmailError":"Please enter your email address here","invalidEmailError":"Invalid email address","enterAuthorError":"Please enter your name here","gravatarFromEmail":"This picture will show whenever you leave a comment. Click to customize it.","logInToExternalAccount":"Log in to use details from one of these accounts.","change":"Change","changeAccount":"Change Account","comment_registration":"0","userIsLoggedIn":"","isJetpack":"0"};
/* ]]> */
</script>
<script type="text/javascript" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/script.js"></script>

	<div id="bit" class="loggedout-follow-normal" style="bottom: -232px;">
		<a class="bsub" href="javascript:void(0)"><span id="bsub-text">Follow</span></a>
		<div id="bitsubscribe">

					<h3><label for="loggedout-follow-field">Follow “The Python Haven”</label></h3>

			<form action="https://subscribe.wordpress.com/" method="post" accept-charset="utf-8" id="loggedout-follow">
			<p>Get every new post delivered to your Inbox.</p>

			<p id="loggedout-follow-error" style="display: none;"></p>

			
			<p><input type="email" name="email" style="width: 95%; padding: 1px 2px" value="Enter your email address" onfocus="this.value=(this.value==&quot;Enter your email address&quot;) ? &quot;&quot; : this.value;" onblur="this.value=(this.value==&quot;&quot;) ? &quot;Enter email address&quot; : this.value;" id="loggedout-follow-field"></p>

			<input type="hidden" name="action" value="subscribe">
			<input type="hidden" name="blog_id" value="6885959">
			<input type="hidden" name="source" value="http://pythonhaven.wordpress.com/2009/12/09/generating_graphs_with_pydot/">
			<input type="hidden" name="sub-type" value="loggedout-follow">

			<input type="hidden" id="_wpnonce" name="_wpnonce" value="89eb1be62f"><input type="hidden" name="_wp_http_referer" value="/2009/12/09/generating_graphs_with_pydot/">
			<p id="bsub-subscribe-button"><input type="submit" value="Sign me up"></p>
			</form>
					<div id="bsub-credit"><a href="http://wordpress.com/signup/?ref=lof">Powered by WordPress.com</a></div>
		</div><!-- #bitsubscribe -->
	</div><!-- #bit -->

	<script type="text/javascript">
	  var vglnk = { api_url: "//api.viglink.com/api",
	                key: "cdee124b11d6baacda6c3e29b12e23dc" };	 
	  (function(d, t) {
	    var s = d.createElement(t); s.type = "text/javascript"; s.async = true;
	    s.src = ("https:" == document.location.protocol ? vglnk.api_url :
	             "//cdn.viglink.com/api") + "/vglnk.js";
	    var r = d.getElementsByTagName(t)[0]; r.parentNode.insertBefore(s, r);
	  }(document, "script"));
	</script>
	<script type="text/javascript" charset="UTF-8" id="polldaddyRatings"><!--//--><![CDATA[//><!--
PDRTJS_settings_896293_post_94={"id":896293,"unique_id":"wp-post-94","title":"Generating%20Graph%20Visualizations%20with%20pydot%20and%26nbsp%3BGraphviz","permalink":"http:\/\/pythonhaven.wordpress.com\/2009\/12\/09\/generating_graphs_with_pydot\/","item_id":"_post_94"}; if ( typeof PDRTJS_RATING !== 'undefined' ){if ( typeof PDRTJS_896293_post_94 == 'undefined' ){PDRTJS_896293_post_94 = new PDRTJS_RATING( PDRTJS_settings_896293_post_94 );}}
//--><!]]></script><script type="text/javascript" charset="UTF-8" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/rating.js"></script><script type="text/javascript" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/devicepx.js"></script>
<script type="text/javascript">
// <![CDATA[
(function() {
try{
  if ( window.external &&'msIsSiteMode' in window.external) {
    if (window.external.msIsSiteMode()) {
      var jl = document.createElement('script');
      jl.type='text/javascript';
      jl.async=true;
      jl.src='/wp-content/plugins/ie-sitemode/custom-jumplist.php';
      var s = document.getElementsByTagName('script')[0];
      s.parentNode.insertBefore(jl, s);
    }
  }
}catch(e){}
})();
// ]]>
</script><script src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/w.js" type="text/javascript"></script>
<script type="text/javascript">
st_go({'blog':'6885959','v':'wpcom','tz':'-4','user_id':'0','post':'94','subd':'pythonhaven'});
ex_go({'crypt':'UE5XaGUuOTlwaD85flAmcm1mcmZsaDhkV11YdWFnNncxc1tjZG9XVXhRVz1bVXI0VlprLSUzeVU4NGZjTyxlUG5va0YsP0JlTGRJTyVfTV9zaGtbM0xCVEJTUX44QWQuaHBWcytGZzB5dC9YdE4wK3lKVm1NU35tTCZsSiVxakJWTW1sSENVT2omekQ2ZVgrbz15dV9xYVBXa0o5ZlVHK2I4ZG0zT0lDfDVHXVtaaHNkUjJ2UVdoM19dVXVSbTcwV2dBMnI3S2J3NSVtd2hjYmtyP0t3QjRXJi5qTnlMU1gvR25jLWdiMk9hL0czQVlnUmEmXTF5NUEvPThqNVdEUU1hVV9+Wk5pS3doOGtUam58U3F4cyw1N05KZ2E4cHJdeS80LzNMdyUzeiY5VTM='});
addLoadEvent(function(){linktracker_init('6885959',94);});
	</script><img id="wpstats" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/g.gif" alt=""><img id="wpstats2" src="./Generating Graph Visualizations with pydot and Graphviz « The Python Haven_files/g(1).gif" alt="" style="display:none">
<noscript>&lt;img src="http://stats.wordpress.com/b.gif?v=noscript" style="height:0px;width:0px;overflow:hidden" alt="" /&gt;</noscript>


</body></html>